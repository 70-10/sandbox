service: ${self:custom.system}

provider:
  name: aws
  runtime: nodejs6.10
  stage: DEV
  region: ap-northeast-1
  environment:
    NODE_ENV: ${self:custom.stage}

plugins:
  - serverless-offline

custom:
  system: slsCognitoSample
  stage: ${opt:stage, self:provider.stage}
  cognito:
    userpool:
      name: ${self:custom.system}-${self:custom.stage}
    client:
      name: ${self:custom.system}-app

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: "ANY {proxy+}"
  healthcheck:
    handler: index.handler
    events:
      - http:
          method: GET
          path: /hc

resources:
  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:custom.cognito.userpool.name}
        Schema:
          - Name: displayname
            AttributeDataType: String
            Mutable: true
            StringAttributeConstraints:
              MaxLength: 255
              MinLength: 1
          - Name: messageTemplates
            AttributeDataType: String
            Mutable: true
            StringAttributeConstraints:
              MaxLength: 255
              MinLength: 1
    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:custom.cognito.client.name}
        UserPoolId:
          Ref: UserPool
        RefreshTokenValidity: 30
    IdentityPool:
      Type: AWS::Cognito::IdentityPool
      Properties:
        IdentityPoolName: ${self:custom.system}_${self:custom.stage}
        AllowUnauthenticatedIdentities: false
        CognitoIdentityProviders:
          - ClientId:
              Ref: UserPoolClient
            ProviderName: {"Fn::Join": ["", ["cognito-idp.", {Ref: "AWS::Region"}, ".amazonaws.com/", { Ref: "UserPool" }]] }
    AuthenticatedPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ${self:custom.system}-${self:custom.stage}-Authenticated
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: ["mobileanalytics:PutEvents", "cognito-sync:*", "cognito-identity:*"]
              Resource: ["*"]
    UnAuthenticatedPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: ${self:custom.system}-${self:custom.stage}-UnAuthenticated
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: ["mobileanalytics:PutEvents", "cognito-sync:*"]
              Resource: ["*"]
    AuthenticatedRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:custom.system}-${self:custom.stage}-Autenticated
        ManagedPolicyArns:
          - Ref: AuthenticatedPolicy
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: sts:AssumeRoleWithWebIdentity
              Principal:
                Federated: cognito-identity.amazonaws.com
              Condition:
                StringEquals: { "cognito-identity.amazonaws.com:aud": { Ref: "IdentityPool" } }
                ForAnyValue:StringLike:  { "cognito-identity.amazonaws.com:amr": "authenticated" }
    UnAuthenticatedRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:custom.system}-${self:custom.stage}-UnAutenticated
        ManagedPolicyArns:
          - Ref: UnAuthenticatedPolicy
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: sts:AssumeRoleWithWebIdentity
              Principal:
                Federated: cognito-identity.amazonaws.com
              Condition:
                StringEquals: { "cognito-identity.amazonaws.com:aud": { Ref: "IdentityPool" } }
                ForAnyValue:StringLike:  { "cognito-identity.amazonaws.com:amr": "authenticated" }
    RoleAttachment:
      Type: AWS::Cognito::IdentityPoolRoleAttachment
      Properties:
        IdentityPoolId:
          Ref: IdentityPool
        Roles:
          authenticated: { "Fn::GetAtt": ["AuthenticatedRole", "Arn"] }
          unauthenticated: { "Fn::GetAtt": ["UnAuthenticatedRole", "Arn"] }
