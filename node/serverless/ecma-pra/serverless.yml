service:
  name: ecma-practice

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
custom:
  system: "EcmaPractice"
  stage: ${opt:stage, self:provider.stage}
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      development:
        sources:
          - table: users
            sources: [./migrate/users.json]
provider:
  name: aws
  runtime: nodejs6.10
  stage: DEV
  region: ap-northeast-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:BatchWriteItem"
      Resource: "arn:aws:dynamodb:ap-northeast-1:*:table/*"

functions:
  GetUsers:
    handler: handlers/route/users.get
    events:
      - http:
          method: get
          path: users
  GetUser:
    handler: handlers/route/users.findById
    events:
      - http:
          method: get
          path: users/{id}
  PostUsers:
    handler: handlers/route/users.post
    events:
      - http:
          method: post
          path: users

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
